elasticsearch:
  # Elasticsearch values
  global:
    elasticsearch:
      service:
        name: elasticsearch
        ports:
          restAPI: 9200
    kibanaEnabled: true

  master:
    masterOnly: false
    replicaCount: 1
  data:
    replicaCount: 0
  coordinating:
    replicaCount: 0
  ingest:
    replicaCount: 0

  sysctlImage:
    ## Enable kernel settings modifier image - not available in GKE Autopilot
    ## See https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
    enabled: true

  kibana:
    ingress:
      enabled: true
      hostname: letsreview-kibana.ddns.net
      path: /
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
      tls: true
      ingressClassName: "nginx"
    persistence:
      enabled: true
      size: 5Gi
    service:
      port:
        http: 5601

# fluentd:
#   aggregator:
#     enabled: false
#   forwarder:
#     enabled: true
#     configFile: fluentd.conf
#     configMap: "fluentd-configmap"

fluent-bit:
  metricsPort: 7070
  # luaScripts:
  #   setIndex.lua: |
  #     function set_index(tag, timestamp, record)
  #         index = "dakar-"
  #         if record["kubernetes"] ~= nil then
  #             if record["kubernetes"]["namespace_name"] ~= nil then
  #                 if record["kubernetes"]["container_name"] ~= nil then
  #                     record["es_index"] = index
  #                         .. record["kubernetes"]["namespace_name"]
  #                         .. "-"
  #                         .. record["kubernetes"]["container_name"]
  #                     return 1, timestamp, record
  #                 end
  #                 record["es_index"] = index
  #                     .. record["kubernetes"]["namespace_name"]
  #                 return 1, timestamp, record
  #             end
  #         end
  #         return 1, timestamp, record
  #     end
  ## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/configuration-file
  config:
    service: |
      [SERVICE]
          Daemon Off
          Flush 5
          Log_Level debug
          Parsers_File /fluent-bit/etc/parsers.conf
          Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
          HTTP_Server On
          HTTP_Listen 0.0.0.0
          HTTP_Port 7070
          Health_Check On
          Trace_Error On

    ## https://docs.fluentbit.io/manual/pipeline/inputs
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/letsreview*.log
          multiline.parser docker, cri
          Tag kube.*
          Mem_Buf_Limit 100MB
          Skip_Long_Lines On

      [INPUT]
          Name systemd
          Tag host.*
          Systemd_Filter _SYSTEMD_UNIT=kubelet.service
          Read_From_Tail On

    ## https://docs.fluentbit.io/manual/pipeline/filters
    filters: |
      [FILTER]
          Name kubernetes
          Match kube.*
          Merge_Log On
          Keep_Log Off
          Buffer_Size False
          K8S-Logging.Parser On
      
    ## https://docs.fluentbit.io/manual/pipeline/outputs
    outputs: |
      [OUTPUT]
          Name es
          Match kube.*
          Index fluent-bit
          Type  _doc
          Host elasticsearch-master
          Port 9200
          HTTP_User elastic
          HTTP_Passwd 9fVpTSmmeC3IzEiE
          tls On
          tls.verify Off
          Logstash_Format On
          Logstash_Prefix logstash
          Retry_Limit False
          Suppress_Type_Name On

      [OUTPUT]
          Name es
          Match host.*
          Index fluent-bit
          Type  _doc
          Host elasticsearch-master
          Port 9200
          HTTP_User elastic
          HTTP_Passwd 9fVpTSmmeC3IzEiE
          tls On
          tls.verify Off
          Logstash_Format On
          Logstash_Prefix node
          Retry_Limit False
          Suppress_Type_Name On
    # customParsers: |
    #   [PARSER]
    #       Name json_parser
    #       Format json
    #       Time_Key time
    #       Time_Format %Y-%m-%dT%H:%M:%S.%NZ

    #   [PARSER]
    #       Name regex_parser
    #       Format regex
    #       Regex /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
    #       Time_Format %Y-%m-%dT%H:%M:%S.%N%:z